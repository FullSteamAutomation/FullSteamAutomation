name: Playwright Tests
on:
  workflow_dispatch:  # Allows manual triggering
  schedule:
    - cron: '0 10 * * *'  # This cron expression runs at 10 AM UTC (which is 6 AM Eastern Time during daylight saving time)

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-20.04  # Use Ubuntu 20.04 for Playwright support

    env:
      AZURE_DEVOPS_PAT: ${{ secrets.AZURE_DEVOPS_PAT }}
      AZURE_DEVOPS_ORGANIZATION: ${{ secrets.AZURE_DEVOPS_ORGANIZATION }}
      AZURE_DEVOPS_PROJECT: ${{ secrets.AZURE_DEVOPS_PROJECT }}
      AZURE_DEVOPS_REPOSITORY: 'Washington'
      FEATURE_BRANCH: 'jmob/playwrightTest'

    steps:
      - name: Clone PartnerTrack Playwright Tests
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git clone --no-checkout https://$AZURE_DEVOPS_PAT:x-oauth-basic@dev.azure.com/fullsteamllc/Washington/_git/Washington
          cd Washington          
          git config core.sparseCheckout true
          echo "/Fullsteam.Payments.QA/Fullsteam.Payments.UITests.Playwright/PartnerTrack" >> .git/info/sparse-checkout
          git checkout jmob/playwrightTest  # Checks out the feature branch
          echo "Current directory:"
          pwd  # Print the current directory
          ls -R  # List all contents of the repository to verify
          mv Fullsteam.Payments.QA/Fullsteam.Payments.UITests.Playwright/PartnerTrack $GITHUB_WORKSPACE/PartnerTrack
          cd $GITHUB_WORKSPACE
          pwd  # Print the current directory
          ls -R  # List all contents of the repository to verify

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: |
          cd $GITHUB_WORKSPACE/PartnerTrack
          npm install
          npx playwright install 
          sudo npx playwright install-deps

      - name: Run Playwright tests
        run: |
          cd $GITHUB_WORKSPACE/PartnerTrack
          npx playwright test          
          cd playwright-report
          ls

      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-html-report
          path: PartnerTrack/playwright-report/

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        if: always()
        uses: actions/download-artifact@v3
        with:
          name: playwright-html-report  # replace with the name of your artifact
          path: '.'  # specify the path where you want to download the artifact
  
      - name: Setup Pages
        if: always()
        uses: actions/configure-pages@v5
  
      - name: Upload artifact
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: '.'
  
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
